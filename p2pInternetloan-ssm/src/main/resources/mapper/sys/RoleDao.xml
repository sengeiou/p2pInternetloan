<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.p2pInternetloan.sys.dao.RoleDao">

    <resultMap type="com.p2pInternetloan.sys.entity.Role" id="RoleMap">
        <result property="roleid" column="roleid" jdbcType="INTEGER"/>
        <result property="rolename" column="rolename" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="RoleMap">
        select
          roleid, rolename, description
        from role
        where roleid = #{roleid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="RoleMap">
        select
          roleid, rolename, description
        from role
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="RoleMap">
        select
          roleid, rolename, description
        from role
        <where>
            <if test="roleid != null">
                and roleid = #{roleid}
            </if>
            <if test="rolename != null and rolename != ''">
                and rolename = #{rolename}
            </if>
            <if test="description != null and description != ''">
                and description = #{description}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="roleid" useGeneratedKeys="true">
        insert into role(rolename, description)
        values (#{rolename}, #{description})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update role
        <set>
            <if test="rolename != null and rolename != ''">
                rolename = #{rolename},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
        </set>
        where roleid = #{roleid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from role where roleid = #{roleid}
    </delete>
    
</mapper>